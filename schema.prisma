datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  username  String   @unique()
  email     String   @unique()
  password  String
  chats     Chat[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Chat {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  text       String
  published  Boolean  @default(true)
  authorId   String
  author     User     @relation(fields: [authorId], references: [id])
  chatRoomId String
  chatRoom   ChatRoom @relation(fields: [chatRoomId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model ChatRoom {
  id           String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String
  chat         Chat[]
  tags         RoomTag[]
  SpecialTag   SpecialTag? @relation(fields: [specialTagId], references: [id])
  specialTagId String?
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}

model RoomTag {
  id        String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String
  chatRooms ChatRoom[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model SpecialTag {
  id        String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String
  chatRooms ChatRoom[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}
